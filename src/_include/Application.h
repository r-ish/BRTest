#ifndef _APPLICATION_H_
#define _APPLICATION_H_
/*
************************************************************************
【File Name】アプリケーション機能
【Description】
【Revision History】
   REV.00 2014-02-11  BY R.ISHIKAWA
   REV.XX 20XX-XX-XX  BY X.XXXXXX
   REV.XX 20XX-XX-XX  BY X.XXXXXX
   REV.XX 20XX-XX-XX  BY X.XXXXXX

                      (C) 2013 IPL CORPORATION All Rights Reserved
************************************************************************
*/

// 外部関数

/******************************************************************************
【名称】LED操作関数
【再入】非リエントラント
【入力】LED1(オレンジ)状態
【出力】なし
【戻値】なし
【処理】LED1の状態を引数で指定した状態に変更する
******************************************************************************/
void APP_LED1_Set(UB ubLed1);

/******************************************************************************
【名称】LED操作関数
【再入】非リエントラント
【入力】LED2(緑)状態
【出力】なし
【戻値】なし
【処理】2の状態を引数で指定した状態に変更する
******************************************************************************/
void APP_LED2_Set(UB ubLed2);


/******************************************************************************
【名称】モーター出力内容変更
【再入】非リエントラント
【入力】モーター1、2の出力方向
        モーター1、2のデューティ比(0.00%〜100.00%)
【出力】なし
【戻値】なし
【処理】モーターの出力内容を引数の値に変更する
******************************************************************************/
void APP_Motor_Set(UB ubMotor1Dir,  UB ubMotor2Dir, 
                   UH uhMotor1Duty, UH uhMotor2Duty);

/******************************************************************************
【名称】スイッチ状態LED反映関数
【再入】非リエントラント
【入力】なし
【出力】なし
【戻値】なし
【処理】スイッチの状態を取得し、LEDの状態に反映させる
******************************************************************************/

void APP_Switch_To_LED();


#endif /* _APPLICATION_H_ */
